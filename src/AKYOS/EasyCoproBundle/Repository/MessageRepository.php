<?php

namespace AKYOS\EasyCoproBundle\Repository;

/**
 * MessageRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class MessageRepository extends \Doctrine\ORM\EntityRepository
{
  /*  public function findMessageInCorbeilleByUser($message) {

        $qb = $this->createQueryBuilder('d')
            ->select('d.isSupprime as msg_isSup', 'd.id as msg_id', 'd.dateEnvoi', 'c.id as user_id')
            ->join('d.user', 'c')
            ->where('c.message = :message')
            ->setParameter('message', $message)
            ->orderBy('d.dateEnvoi', 'desc')
        ;
        return $qb->getQuery()->getArrayResult();
    } */

    public function findNbMessagesByUser($user) {
        $qb = $this->createQueryBuilder('m')
            ->select('COUNT(m)')
            ->where('m.destinataire = :user')
            ->setParameter('user', $user)
        ;

        return $qb->getQuery()->getSingleScalarResult();
    }

  public function findUnreadMessagesByUser($user) {
      $qb = $this->createQueryBuilder('m')
          ->select('COUNT(m)')
          ->where('m.destinataire = :user')
          ->andWhere('m.isLu = false')
          ->setParameter('user', $user)
      ;

      return $qb->getQuery()->getSingleScalarResult();
  }

    public function findInboxMessagesByUser($user) {
        $qb = $this->createQueryBuilder('m')
            ->where('m.destinataire = :user')
            ->andWhere('m.isSupprime = false')
            ->setParameter('user', $user)
            ->orderBy('m.dateEnvoi', 'desc');
        ;

        return $qb->getQuery()->getResult();
    }

    public function findSendMessagesByUser($user) {
        $qb = $this->createQueryBuilder('m')
            ->where('m.expediteur = :user')
            ->andWhere('m.isSupprime = false')
            ->setParameter('user', $user)
            ->orderBy('m.dateEnvoi', 'desc');
        ;

        return $qb->getQuery()->getResult();
    }

    public function findDeletedMessagesByUser($user) {
        $qb = $this->createQueryBuilder('m')
            ->where('m.destinataire = :user')
            ->andWhere('m.isSupprime = true')
            ->setParameter('user', $user)
            ->orderBy('m.dateEnvoi', 'desc');
        ;

        return $qb->getQuery()->getResult();
    }

}
